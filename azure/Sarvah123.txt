wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.tar.gz"

wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u45-b14/server-jre-8u45-linux-x64.tar.gz"




17  sudo groupadd admin
   18  sudo groupadd developer
   19  groups 
   20  sudo cat /etc/group
   21  groupadd deploy
   22  sudo groupadd deploy
   23  sudo groupadd build 
   24  sudo cat /etc/group
   25  sudo groupdel build 
   26  sudo groupdel deploy
   27  sudo groupadd buildmeister
   28  sudo groupadd deploymeister
   29  sudo cat /etc/group
   30  sudo visudo
   31  sudo useradd -g admin -G developer,buildmeister,deploymeister naveen
   32  sudo useradd -g admin -G developer,buildmeister,deploymeister rajesh
   33  exit
   34  users
   35  cat /etc/passwd
   36  netstat -tulpan
   37  dig 191.238.64.78
   38  dig -x 191.238.64.78 +short
   39  netstat -tulpan
   40  dig -x 43.255.188.169 +short
   41  ps -ef | grep 16001
   42  dig -x 43.255.188.169 +short
   43  exit
   44  echo JAVA_HOME
   45  echo $JAVA_HOME
   46  realpath /usr/java/latest





 sudo vim /etc/yum.repos.d/nginx.repo
    2  sudo yum update
    3  sudo grep SCSI /var/log/messages
    4  sudo fdisk /dev/sdc
    5  sudo mkfs -t ext4 /dev/sdc1
    6  sudo mkdir /datadrive
    7  sudo mount /dev/sdc1 /datadrive
    8  sudo -i blkid
    9  sudo vi /etc/fstab
   10  sudo umount /datadrive
   11  suod mount /datadrive
   12  sudo mount /datadrive
   13  cd /datadrive/
   14  ll
   15  wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3
A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://down
load.oracle.com/otn-pub/java/jdk/8u45-b14/server-jre-8u45-linux-x64.tar.gz"
   16  sudo yum install wget
   17  wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3
A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://down
load.oracle.com/otn-pub/java/jdk/8u45-b14/server-jre-8u45-linux-x64.tar.gz"
   18  ll
   19  ll /datadrive/
   20  sudo wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=h
ttp%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http:/
/download.oracle.com/otn-pub/java/jdk/8u45-b14/server-jre-8u45-linux-x64.tar.gz"
   21  ll
   22  cd /opt/
   23  ll
   24  ll /opt
   25  ll /opt/
   26  sudo mkdir 
   27  sudo mkdir java
   28  sudo cp /datadrive/server-jre-8u45-linux-x64.tar.gz /opt/java/
   29  cd java/
   30  ll
   31  tar xvf server-jre-8u45-linux-x64.tar.gz 
   32  sudo tar xvf server-jre-8u45-linux-x64.tar.gz 
   33  ll
   34  ll  jdk1.8.0_45/jre/bin/
   35  ll jdk1.8.0_45/
   36  ll /bin/
   37  ll jdk1.8.0_45/bin/
   38  ll jdk1.8.0_45/jre/bin/
   39  ll
   40  sudo rm -rf server-jre-8u45-linux-x64.tar.gz
   41  ll
   42  sudo su 
   43  exit 
   44  sudo su 
   45  exit 
   46  sudo su
   47  sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redh
at/jenkins.repo
   48  sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key
   49  sudo yum install jenkins
   50  sudo systemctl start jenkins
   51  ps -ef | grep jenkins
   52  sudo systemctl stop jenkins
   53  ps -ef | grep jenkins
   54  sudo systemctl start jenkins.service
   55  ps -ef | grep jenkins
   56  sudo systemctl enable jenkins.service
   57  sudo systemctl stop jenkins.service
   58  sudo systemctl enable jenkins.service
   59  ps -ef | grep jenkins
   60  sudo systemctl start jenkins.service
   61  ps -ef | grep jenkins
   62  curl http://localhost:8080
   63  exit







1  alternatives --install /usr/bin/java java /opt/java/jdk1.8.0_45/bin/java 2
    2  alternatives --config java 
    3  alternatives --install /usr/bin/jar jar /opt/java/jdk1.8.0_45/bin/jar 2
    4  alternatives --install /usr/bin/javac javac /opt/java/jdk1.8.0_45/bin/javac 2
    5  ll
    6  ln -s default jdk1.8.0_45
    7  ln -s jdk1.8.0_45 default
    8  ll
    9  ln -s jdk1.8.0_45 latest
   10  ll
   11  alternatives --install /usr/bin/javac javac /opt/java/latest/bin/javac 2
   12  alternatives --configure javac
   13  alternatives --config javac
   14  alternatives --install /usr/bin/javac javac /opt/java/latest/bin/javac 1
   15  alternatives --config javac
   16  alternatives --install /usr/bin/java java /opt/java/latest/bin/java 2
   17  alternatives --config java
   18  alternatives --config java
   19  alternatives --remove javac /opt/java/latest/bin/javac
   20  alternatives --remove java /opt/java/latest/bin/java
   21  alternatives --remove java /opt/java/jdk1.8.0_45/bin/java
   22  alternatives --remove javac /opt/java/jdk1.8.0_45/bin/javac
   23  alternatives --remove jar /opt/java/jdk1.8.0_45/bin/jar
   24  alternatives --config java
   25  alternatives --config javac
   26  alternatives --config jar
   27  alternatives --install /usr/bin/java java /opt/java/latest/bin/java 2
   28  alternatives --install /usr/bin/javac javac /opt/java/latest/bin/javac 2
   29  alternatives --install /usr/bin/jar jar /opt/java/latest/bin/jar 2
   30  alternatives --config java
   31  alternatives --config javac
   32  alternatives --config jar
   33  alternatives --set jar /opt/java/latest/bin/jar
   34  alternatives --set javac /opt/java/latest/bin/javac
   35  exit
   36  java -version
   37  vi /etc/profile.d/java.sh
   38  cd /etc/profile.d/
   39  ll
   40  cat colorgrep.sh
   41  cat colorgrep.csh
   42  cp java.sh java.csh
   43  ll
   44  source /etc/profile.d/java.sh 
   45  echo $JAVA_HOME
   46  realpath /opt/java/latest
   47  exit
   48  yum install vim 
   49  echo $releasever
   50  echo $basearch
   
   
   NGINX install
   
   51  vim /etc/yum.repos.d/nginx.repo
   52  yum install nginx
   53  ps -ef | grep nginx
   54  systemctl enable nginx.service
   55  ps -ef | grep nginx
   56  systemctl start nginx.service
   57  ps -ef | grep nginx
   58  vim /etc/nginx/nginx.conf
   59  vim /etc/nginx/conf.d/default.conf 
   60  ll /usr/share/nginx/html
   61  cd /usr/share/nginx/html
   62  vim index.html 
   63  exit
   64  cd /etc/nginx/conf.d/
   65  ll
   66  cp default.conf default.conf_bkp
   67  ll
   68  vim default.conf
   69  which nginx
   70  nginx -s reload
   71  vim default.conf
   72  ps -ef | grep nginx
   73  less /etc/nginx/nginx.conf
   74  !
   75  less /var/log/nginx/error.log
   76  vim default.conf
   77  nginx -s reload
   78  less /var/log/nginx/error.log
   79  vim default.conf
   80  cp default.conf suppandi.conf
   81  ll
   82  vim suppandi.conf 
   83  nginx -s reload
   84  less /var/log/nginx/error.log
   85  ps -ef | grep 8080
   86  cat /var/log/audit/audit.log | grep nginx | grep denied
   87  yum install audit2allow
   88  setsebool -P httpd_can_network_connect 1
   89  less /var/log/nginx/error.log
   90  vim suppandi.conf
   91  nginx -s reload
   92  less /var/log/nginx/error.log
   93  less /var/log/nginx/error.log
   94  vim suppandi.conf
   95  ll /var/run/jenkins/war/
   96  ps -ef | grep jenkins
   97  vim suppandi.conf
   98  nginx -s reload
   99  less /var/log/nginx/error.log
   
   
   
   Mongo Install   
   
	  sudo grep SCSI /var/log/messages
    3  sudo yum update
    4  sudo fdisk /dev/sdc
    5  sudo mkfs -t ext4 /dev/sdc1
    6  sudo mkdir /datadrive
    7  sudo mount /dev/sdc1 /datadrive
    8  sudo -i blkid
    9  sudo vi /etc/fstab
   10  sudo umount /datadrive
   11  sudo mount /datadrive
   12  exit
   13  sudo mv /tmp/mongodb-org-3.0.repo /datadrive/
   14  ll /etc/yum.repos.d/
   15  sudo vim /etc/yum.repos.d/mongodb.repo
   16  sudo yum install vim
   17  sudo vim /etc/yum.repos.d/mongodb-org-3.0.repo
   18  sudo yum install mongodb-org
   19  which seamange
   20  which semanage
   21  sudo yum provides semanage
   22  sudo yum install policycoreutils-python
   23  sudo semanage port -l | grep mongod_port_t
   24  sudo mkdir -p /datadrive/mongodb/data
   25  cd /datadrive/
   26  sudo chown -R mowgli mongodb
   27  ll
   28  sudo semanage port -l | grep mongod_port_t
   29  sudo vim /etc/mongod.conf 
   30  cd
   31  mongod --config /etc/mongod.conf 
   32  less /var/log/mongodb/mongod.log 
   33  sudo less /var/log/mongodb/mongod.log 
   34  sudo less /var/log/messages
   35  sudo vim /etc/mongod.conf 
   36  mongod --config /etc/mongod.conf 
   37  ps -ef  | grep mongo
   38  mongo --host bagheera.cloudapp.net --port 27017
   39  ps -ef | grep mongo
   40  netstat -tulpan | grep 27017
   41  mongo --port 27017
   42  mongo --port 27017
   43  hostname -f
   44  ps -ef | grep mongod
   45  kill 10791
   46  ll
   47  mongod --config /etc/mongod.conf 
   48  netstat -tulpan | grep 27017
   49  ps -ef | grep mongod
   50  sudo vim /etc/mongod.conf 
   51  ps -ef | grep mongod
   52  kill 11040
   53  ps -ef | grep mongod
   54  mongod --config /etc/mongod.conf 
   55  sudo vim /etc/mongod.conf 
   56  exit
   57  ps -ef | grep mongod
   58  kill 11113
   59  mongod --config /etc/mongod.conf 
   
 

Reinstall Mongo with SELinux constrains
  835  yum remove mongodb-org*
  836  yum install mongodb-org
  837  semanage port -a -t mongod_port_t -p tcp 27017
  838  exit 
  839  cd /var/lib/mongo/
  840  lx -Z
  841  ls -Z
  842  cd ..
  843  ls -Z
  844  cd /var/log/
  845  ls -Z
  846  less /var/log/mongodb/mongod.log 
  847  ll -ah /tmp
  848  lsof mongodb-27017.sock
  849  yum install lsof
  850  pwd
  851  lsof /tmp/mongodb-27017.sock 
  852  ll /tmp/
  853  cd /tmp/
  854  ll
  855  rm mongodb-27017.sock 
  856  systemctl start mongod
  857  ps -ef | grep mongo
  858  less /var/log/mongodb/mongod.log 
  859  systemctl stop mongod
  860  vim /etc/mongod.conf
  861  systemctl start mongod
  862  less /var/log/mongodb/mongod.log 
  863  ls -la /var/lib/mongo/
  864  ls -la /var/lib/mongo
  865  ls -la /var/lib/
  866  cd /datadrive/mongodb/
  867  ll
  868  c data/
  869  ll
  870  cd data/
  871  ll
  872  cd .. 
  873  cd .. 
  874  ll
  875  ls -Z /var/lib/mongo
  876  ls -Z /datadrive/mongodb
  877  chcon -RV --type=mongod_var_lib_t /datadrive/mongodb
  878  chcon -Rv --type=mongod_var_lib_t /datadrive/mongodb
  879  ls -Z /datadrive/mongodb/
  880  semanage fcontext -a -t mongod_var_lib_t "/datdrive/mongodb(/.*)?"
  881  ps -ef | grep mongo
  882  systemctl start mongod
  883  ps -ef | grep mongo
  884  vim /etc/mongod.conf
  885  netstat -tulpan | grep 27017
  886  netstat -tulpan | grep 27*
  887  less /var/log/mongodb/mongod.log 
  888  netstat -tulpan | grep 27017





   
   
   conf = {
   _id : “mongors”,
   members : [
     {_id:0, host:”bagheera.cloudapp.net:27017"},
     {_id:1, host:”bagheera.cloudapp.net:27027"},
     {_id:2, host:”bagheera.cloudapp.net:27037"}]}
     
     
     
     java.sh    
   #!/bin/bash
JAVA_HOME=/usr/java/jdk1.8.0_25/
PATH=$JAVA_HOME/bin:$PATH
export PATH JAVA_HOME
export CLASSPATH=.
   
   
  nginx.repo
  [nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=0
enabled=1


mongodb-org-3.0.repo
[mongodb-org-3.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.0/x86_64/
gpgcheck=0
enabled=1



[mowgli@bagheera-mongo1 ~]$ cat /etc/mongod.conf 
# mongod.conf

#where to log
logpath=/datadrive/mongodb/mongod.log

logappend=true

# fork and run in background
fork=true

port=27017

dbpath=/datadrive/mongodb/data

# location of pidfile
pidfilepath=/datadrive/mongodb/mongod.pid

# Listen to local interface only. Comment out to listen on all interfaces. 
#bind_ip=127.0.0.1

# Disables write-ahead journaling
# nojournal=true

# Enables periodic logging of CPU utilization and I/O wait
#cpu=true

# Turn on/off security.  Off is currently the default
#noauth=true
#auth=true

# Verbose logging output.
#verbose=true

# Inspect all client data for validity on receipt (useful for
# developing drivers)
#objcheck=true

# Enable db quota management
#quota=true

# Set oplogging level where n is
#   0=off (default)
#   1=W
#   2=R
#   3=both
#   7=W+some reads
#diaglog=0

# Ignore query hints
#nohints=true

# Enable the HTTP interface (Defaults to port 28017).
#httpinterface=true

# Turns off server-side scripting.  This will result in greatly limited
# functionality
#noscripting=true

# Turns off table scans.  Any query that would do a table scan fails.
#notablescan=true

# Disable data file preallocation.
#noprealloc=true

# Specify .ns file size for new databases.
# nssize=<size>

# Replication Options

# in replicated mongo databases, specify the replica set name here
replSet=mongors
# maximum size in megabytes for replication operation log
#oplogSize=1024
# path to a key file storing authentication info for connections
# between replica set members
#keyFile=/path/to/keyfile




MongoDB Setup on Local


db.createUser( { user: "mongoUserAdmin", pwd: "ka05em1751", roles: [{role:"userAdminAnyDatabase", db:"admin"}]})
Successfully added user: {
	"user" : "mongoUserAdmin",
	"roles" : [
		{
			"role" : "userAdminAnyDatabase",
			"db" : "admin"
		}
	]
}




db.createUser({user: "mbgdbUserAdmin", pwd: "password", roles:[{role:"userAdmin", db: "mbgdb"}]})
Successfully added user: {
	"user" : "mbgdbUserAdmin",
	"roles" : [
		{
			"role" : "userAdmin",
			"db" : "mbgdb"
		}
	]
}








